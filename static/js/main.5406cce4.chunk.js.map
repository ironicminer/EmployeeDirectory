{"version":3,"sources":["components/TableHeader.js","components/EmployeeTable.js","utils/Api.js","components/SortBtn.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","props","EmployeeTable","id","firstName","lastName","email","src","pic","axios","get","then","res","data","results","map","employee","value","name","first","last","picture","medium","SortBtn","onClick","App","useState","employees","setEmployees","useEffect","api","catch","err","sort","a","b","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAiBeA,MAdf,SAAqBC,GACnB,OACE,gCACE,+BACE,oCACA,uCACA,sCACA,uCACA,6CCKOC,MAdf,SAAuBD,GACrB,OACE,+BACE,6BAAKA,EAAME,KACX,6BAAKF,EAAMG,YACX,6BAAKH,EAAMI,WACX,6BAAKJ,EAAMK,QACX,6BACE,qBAAKC,IAAKN,EAAMO,YCRT,G,MACC,WACZ,OAAOC,IACJC,IAAI,gDACJC,MAAK,SAACC,GAEL,OADkBA,EAAIC,KAAKC,QACVC,KAAI,SAACC,GACpB,MAAO,CACLb,GAAIa,EAASb,GAAGc,MAChBb,UAAWY,EAASE,KAAKC,MACzBd,SAAUW,EAASE,KAAKE,KACxBd,MAAOU,EAASV,MAChBe,QAASL,EAASK,QAAQC,gBCJvBC,MARf,SAAiBtB,GACf,OACE,8BACE,wBAAQuB,QAAS,kBAAMvB,EAAME,IAA7B,qBC6DSsB,MAxDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,KAkCb,OA1BAC,qBAAU,WAKRC,IAEGnB,MAAK,SAACgB,GACLC,EAAaD,MAEdI,OAAM,SAACC,GACN,GAAIA,EACF,MAAMA,OAVX,IAyBD,gCACE,oDACA,cAAC,EAAD,CAASR,QAZb,WACEG,EAAUM,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/B,GAAKgC,EAAEhC,GAAK,GAAK,QAY3C,wBAAOiC,UAAU,iCAAjB,UACE,cAAC,EAAD,IACA,gCACGT,EAAUZ,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CACEb,GAAIa,EAASb,GACbC,UAAWY,EAASZ,UACpBC,SAAUW,EAASX,SACnBC,MAAOU,EAASV,MAChBE,IAAKQ,EAASK,sBC7CbgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5406cce4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction TableHeader(props) {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>First</th>\r\n        <th>Last</th>\r\n        <th>Email</th>\r\n        <th>Photo</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.id}</td>\r\n      <td>{props.firstName}</td>\r\n      <td>{props.lastName}</td>\r\n      <td>{props.email}</td>\r\n      <td>\r\n        <img src={props.pic}></img>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios\r\n      .get(\"https://randomuser.me/api/?results=20&nat=us\")\r\n      .then((res) => {\r\n        const employees = res.data.results;\r\n        return employees.map((employee) => {\r\n          return {\r\n            id: employee.id.value,\r\n            firstName: employee.name.first,\r\n            lastName: employee.name.last,\r\n            email: employee.email,\r\n            picture: employee.picture.medium,\r\n          };\r\n        });\r\n      });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nfunction SortBtn(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.id}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortBtn;\r\n","import \"./App.css\";\nimport employeeData from \"./employees.json\";\nimport React, { useEffect, useState } from \"react\";\nimport TableHeader from \"./components/TableHeader\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport api from \"./utils/Api\";\nimport SortBtn from \"./components/SortBtn\";\nimport { propTypes } from \"react-bootstrap/esm/Image\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n\n  // useEffect(async () => {\n  //   const employeeData = await import(\"./employees.json\");\n  //   setEmployees(employeeData);\n  // }, []);\n\n  useEffect(() => {\n    loadEmployee();\n  }, []);\n\n  function loadEmployee() {\n    api\n      .getEmployees()\n      .then((employees) => {\n        setEmployees(employees);\n      })\n      .catch((err) => {\n        if (err) {\n          throw err;\n        }\n      });\n  }\n\n  function sortId() {\n    employees.sort((a, b) => (a.id > b.id ? 1 : -1));\n  }\n  // const removeFriend = (id) => {\n  //   const employees = this.state.employees.filter((friend) => friend.id !== id);\n\n  //   this.setState({ employees });\n  // };\n\n  return (\n    <div>\n      <h1>Employee Directory</h1>\n      <SortBtn onClick={sortId} />\n      <table className=\"table table-striped table-dark\">\n        <TableHeader />\n        <tbody>\n          {employees.map((employee) => (\n            <EmployeeTable\n              id={employee.id}\n              firstName={employee.firstName}\n              lastName={employee.lastName}\n              email={employee.email}\n              pic={employee.picture}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}